# S99stage1-uninstall: delete volumes and remove moboot
# Copyright (C) 2011 Brian McKenzie, All Rights Reserved
# For any questions, email me at <mckenzba@gmail.com>
# You may redistribute and modify this file under the GPL license

# Set up environment path variables
export LVM_SYSTEM_DIR=/boot/etc/lvm

# Pull in internal configuration information
. /etc/installer-defaults

system_reboot() {
    sync
    reboot
    exit 1 # Failsafe
}

# Error functions
lvm_start_err() {
    echo "***********************************************************"
    echo "**ERROR: Unable to start LVM!, rebooting in 30 seconds...**"
    echo "***********************************************************"
    umount_volumes
    sleep 30
    system_reboot
}

media_repair_err() {
    echo "**********************************************************************************************************"
    echo "**ERROR: Unable to repair media volume!                                                                 **"
    echo "**Please use webOS Doctor at http://www.palm.com/ROM to repair your TouchPad, rebooting in 30 seconds...**"
    echo "**********************************************************************************************************"
    umount_volumes
    sleep 30
    system_reboot
}

media_resize_err() {
    echo "*****************************************************************"
    echo "**ERROR: Resizing media volume failed, attempting to repair.**"
    echo "*****************************************************************"
    sleep 3
}

# Kill any processes running and unmount filesystems
umount_volumes() {
    echo "========================="
    echo "Unmounting filesystems..."
    echo "========================="

    cd /

    fuser -m /mnt/webos -k
    fuser -m /boot -k
    umount /mnt/webos
    umount /boot
    sync
}

# Mount all volumes that are to be used for the installation
mount_boot() {
    echo "=========================="
    echo "Mounting boot partition..."
    echo "=========================="

    cd /

    # If /boot doesn't exist, make one
    if [ ! -d /boot ]; then
        mkdir -p /boot
    fi

    # Check filesystems for any errors and mount
    fsck -fy /dev/${SYS_BOOT_PART}
    mount -t ext3 /dev/${SYS_BOOT_PART} /boot
}

uninstall_system() {
    mount_boot

    # Initiate LVM
    /boot/usr/sbin/lvm.static vgchange -ay

    # Check if LVM started successfully
    if [ $? -ne 0 -o ! -d /dev/store ]; then
        lvm_start_err
    fi

    # Get configuration information
    read_config

    # If /mnt/webos doesn't exist, make one.
    if [ ! -d /mnt/webos ]; then
        mkdir -p /mnt/webos
    fi

    fsck -fy /dev/store/root
    mount -t ext3 -o rw /dev/store/root /mnt/webos

    echo "=========================="
    echo "Deleting target volumes..."
    echo "=========================="

    # We are going to make this simple. We will look at our list of pre-defined suffixes and delete any
    # matching cases. Though this method will not work at all if we decide to give SystemInstaller the
    # ability to install multiple OSs along side (tri/quad-boot) each other on the same device, this should
    # work fine for now.
    SYST_EXISTS=0
    SWAP_EXISTS=0
    for VOLUME in `/boot/usr/sbin/lvm.static lvs | awk '{ print $1 }' | tail -f`; do
        case ${VOLUME} in
            *-${LVM_SYSTEM_SUFFIX})
                echo "System volume ${VOLUME} found, removing..."
                SYST_EXISTS=1
                /boot/usr/sbin/lvm.static lvremove -f store/${VOLUME}
                ;;
            *-${LVM_SWAP_SUFFIX})
                echo "Swap volume ${VOLUME} found, removing..."
                SWAP_EXISTS=1
                /boot/usr/sbin/lvm.static lvremove -f store/${VOLUME}
                ;;
        esac
    done

    if [ ${SYST_EXISTS} -eq 0 -a ${SWAP_EXISTS} -eq 0 ]; then
        echo "#############################################################"
        echo "No installations have been detected on this system, skipping."
        echo "#############################################################"
    fi

    # Calculate the free space that is now available in the volume group and resize store/media accordingly
    FREE_VGSPACE=`/boot/usr/sbin/lvm.static vgdisplay -c store | awk -F: '{print $16}'`
    /boot/usr/sbin/lvm.static lvresize -l +$((${FREE_VGSPACE} - 1)) store/media

    # resize fat partiton to match new store/media size
    FREE_LVSPACE=`/boot/usr/sbin/lvm.static lvdisplay -c store/media | awk -F: '{print $7/2048}'`
    LD_LIBRARY_PATH=/mnt/webos/usr/lib /mnt/webos/bin/resizefat /dev/store/media ${FREE_LVSPACE}M
    if [ $? -ne 0 ]; then
        media_resize_err
        /mnt/webos/usr/sbin/dosfsck -a /dev/mapper/media
        if [ $? -ne 0 ]; then
            media_repair_err
        fi
    fi

    echo "=================="
    echo "Deleting moboot..."
    echo "=================="
    HP_KERNEL=`ls /boot/uImage*-palm-tenderloin | sed 's/......\(.*\)/\1/'`
    case `readlink /boot/uImage` in
        *uImage.moboot*)
            MOBOOT_INSTALLED=1
            ;;
        *)
            MOBOOT_INSTALLED=0
    esac

    if [ ${MOBOOT_INSTALLED} -ne 1 ]; then
        echo "############################################################"
        echo "No installation of moboot detected on this system, skipping."
        echo "############################################################"
    elif [ ${MOBOOT_INSTALLED} -eq 1 ]; then
        cd /boot
        rm -rf uImage uImage.moboot moboot.default moboot.timeout
        rm -rf uImage.webOS moboot.splash.webOS.tga uImage.*
        ln -s ${HP_KERNEL} uImage
    fi

    echo "==============================="
    echo "=+++++++++++++++++++++++++++++="
    echo "=+ [Uninstallation complete] +="
    echo "=+++++++++++++++++++++++++++++="
    echo "==============================="
    umount_volumes
    sleep 10
    system_reboot
}

uninstall_system
